\ ------------------------------------------------------------------------
TESTING <> U>

T{ 0 0 <> -> <FALSE> }T
T{ 1 1 <> -> <FALSE> }T
T{ -1 -1 <> -> <FALSE> }T
T{ 1 0 <> -> <TRUE> }T
T{ -1 0 <> -> <TRUE> }T
T{ 0 1 <> -> <TRUE> }T
T{ 0 -1 <> -> <TRUE> }T

T{ 0 1 U> -> <FALSE> }T
T{ 1 2 U> -> <FALSE> }T
T{ 0 MID-UINT U> -> <FALSE> }T
T{ 0 MAX-UINT U> -> <FALSE> }T
T{ MID-UINT MAX-UINT U> -> <FALSE> }T
T{ 0 0 U> -> <FALSE> }T
T{ 1 1 U> -> <FALSE> }T
T{ 1 0 U> -> <TRUE> }T
T{ 2 1 U> -> <TRUE> }T
T{ MID-UINT 0 U> -> <TRUE> }T
T{ MAX-UINT 0 U> -> <TRUE> }T
T{ MAX-UINT MID-UINT U> -> <TRUE> }T

\ ------------------------------------------------------------------------
TESTING 0<> 0>

T{ 0 0<> -> <FALSE> }T
T{ 1 0<> -> <TRUE> }T
T{ 2 0<> -> <TRUE> }T
T{ -1 0<> -> <TRUE> }T
T{ MAX-UINT 0<> -> <TRUE> }T
T{ MIN-INT 0<> -> <TRUE> }T
T{ MAX-INT 0<> -> <TRUE> }T

T{ 0 0> -> <FALSE> }T
T{ -1 0> -> <FALSE> }T
T{ MIN-INT 0> -> <FALSE> }T
T{ 1 0> -> <TRUE> }T
T{ MAX-INT 0> -> <TRUE> }T

\ ------------------------------------------------------------------------
TESTING NIP TUCK ROLL

T{ 1 2 NIP -> 2 }T
T{ 1 2 3 NIP -> 1 3 }T

T{ 1 2 TUCK -> 2 1 2 }T
T{ 1 2 3 TUCK -> 1 3 2 3 }T

T{ : ro5  100 200 300 400 500 ; -> }T
T{ ro5 3 ROLL -> 100 300 400 500 200 }T
T{ ro5 2 ROLL -> ro5 ROT }T
T{ ro5 1 ROLL -> ro5 SWAP }T
T{ ro5 0 ROLL -> ro5 }T

T{ ro5 2 PICK -> 100 200 300 400 500 300 }T
T{ ro5 1 PICK -> ro5 OVER }T
T{ ro5 0 PICK -> ro5 DUP }T

\ ------------------------------------------------------------------------
TESTING 2>R 2R@ 2R>

T{ : rr0  2>R 100 R> R> ; -> }T
T{ 300 400 rr0 -> 100 400 300 }T
T{ 200 300 400 rr0 -> 200 100 400 300 }T

T{ : rr1  2>R 100 2R@ R> R> ; -> }T
T{ 300 400 rr1 -> 100 300 400 400 300 }T
T{ 200 300 400 rr1 -> 200 100 300 400 400 300 }T

T{ : rr2  2>R 100 2R> ; -> }T
T{ 300 400 rr2 -> 100 300 400 }T
T{ 200 300 400 rr2 -> 200 100 300 400 }T

\ ------------------------------------------------------------------------
TESTING HEX

T{ BASE @ HEX BASE @ DECIMAL BASE @ - SWAP BASE ! -> 6 }T

\ ------------------------------------------------------------------------
TESTING WITHIN

T{ 0 0 0 WITHIN -> <FALSE> }T
T{ 0 0 MID-UINT WITHIN -> <TRUE> }T
T{ 0 0 MID-UINT+1 WITHIN -> <TRUE> }T
T{ 0 0 MAX-UINT WITHIN -> <TRUE> }T
T{ 0 MID-UINT 0 WITHIN -> <FALSE> }T
T{ 0 MID-UINT MID-UINT WITHIN -> <FALSE> }T
T{ 0 MID-UINT MID-UINT+1 WITHIN -> <FALSE> }T
T{ 0 MID-UINT MAX-UINT WITHIN -> <FALSE> }T
T{ 0 MID-UINT+1 0 WITHIN -> <FALSE> }T
T{ 0 MID-UINT+1 MID-UINT WITHIN -> <TRUE> }T
T{ 0 MID-UINT+1 MID-UINT+1 WITHIN -> <FALSE> }T
T{ 0 MID-UINT+1 MAX-UINT WITHIN -> <FALSE> }T
T{ 0 MAX-UINT 0 WITHIN -> <FALSE> }T
T{ 0 MAX-UINT MID-UINT WITHIN -> <TRUE> }T
T{ 0 MAX-UINT MID-UINT+1 WITHIN -> <TRUE> }T
T{ 0 MAX-UINT MAX-UINT WITHIN -> <FALSE> }T
T{ MID-UINT 0 0 WITHIN -> <FALSE> }T
T{ MID-UINT 0 MID-UINT WITHIN -> <FALSE> }T
T{ MID-UINT 0 MID-UINT+1 WITHIN -> <TRUE> }T
T{ MID-UINT 0 MAX-UINT WITHIN -> <TRUE> }T
T{ MID-UINT MID-UINT 0 WITHIN -> <TRUE> }T
T{ MID-UINT MID-UINT MID-UINT WITHIN -> <FALSE> }T
T{ MID-UINT MID-UINT MID-UINT+1 WITHIN -> <TRUE> }T
T{ MID-UINT MID-UINT MAX-UINT WITHIN -> <TRUE> }T
T{ MID-UINT MID-UINT+1 0 WITHIN -> <FALSE> }T
T{ MID-UINT MID-UINT+1 MID-UINT WITHIN -> <FALSE> }T
T{ MID-UINT MID-UINT+1 MID-UINT+1 WITHIN -> <FALSE> }T
T{ MID-UINT MID-UINT+1 MAX-UINT WITHIN -> <FALSE> }T
T{ MID-UINT MAX-UINT 0 WITHIN -> <FALSE> }T
T{ MID-UINT MAX-UINT MID-UINT WITHIN -> <FALSE> }T
T{ MID-UINT MAX-UINT MID-UINT+1 WITHIN -> <TRUE> }T
T{ MID-UINT MAX-UINT MAX-UINT WITHIN -> <FALSE> }T
T{ MID-UINT+1 0 0 WITHIN -> <FALSE> }T
T{ MID-UINT+1 0 MID-UINT WITHIN -> <FALSE> }T
T{ MID-UINT+1 0 MID-UINT+1 WITHIN -> <FALSE> }T
T{ MID-UINT+1 0 MAX-UINT WITHIN -> <TRUE> }T
T{ MID-UINT+1 MID-UINT 0 WITHIN -> <TRUE> }T
T{ MID-UINT+1 MID-UINT MID-UINT WITHIN -> <FALSE> }T
T{ MID-UINT+1 MID-UINT MID-UINT+1 WITHIN -> <FALSE> }T
T{ MID-UINT+1 MID-UINT MAX-UINT WITHIN -> <TRUE> }T
T{ MID-UINT+1 MID-UINT+1 0 WITHIN -> <TRUE> }T
T{ MID-UINT+1 MID-UINT+1 MID-UINT WITHIN -> <TRUE> }T
T{ MID-UINT+1 MID-UINT+1 MID-UINT+1 WITHIN -> <FALSE> }T
T{ MID-UINT+1 MID-UINT+1 MAX-UINT WITHIN -> <TRUE> }T
T{ MID-UINT+1 MAX-UINT 0 WITHIN -> <FALSE> }T
T{ MID-UINT+1 MAX-UINT MID-UINT WITHIN -> <FALSE> }T
T{ MID-UINT+1 MAX-UINT MID-UINT+1 WITHIN -> <FALSE> }T
T{ MID-UINT+1 MAX-UINT MAX-UINT WITHIN -> <FALSE> }T
T{ MAX-UINT 0 0 WITHIN -> <FALSE> }T
T{ MAX-UINT 0 MID-UINT WITHIN -> <FALSE> }T
T{ MAX-UINT 0 MID-UINT+1 WITHIN -> <FALSE> }T
T{ MAX-UINT 0 MAX-UINT WITHIN -> <FALSE> }T
T{ MAX-UINT MID-UINT 0 WITHIN -> <TRUE> }T
T{ MAX-UINT MID-UINT MID-UINT WITHIN -> <FALSE> }T
T{ MAX-UINT MID-UINT MID-UINT+1 WITHIN -> <FALSE> }T
T{ MAX-UINT MID-UINT MAX-UINT WITHIN -> <FALSE> }T
T{ MAX-UINT MID-UINT+1 0 WITHIN -> <TRUE> }T
T{ MAX-UINT MID-UINT+1 MID-UINT WITHIN -> <TRUE> }T
T{ MAX-UINT MID-UINT+1 MID-UINT+1 WITHIN -> <FALSE> }T
T{ MAX-UINT MID-UINT+1 MAX-UINT WITHIN -> <FALSE> }T
T{ MAX-UINT MAX-UINT 0 WITHIN -> <TRUE> }T
T{ MAX-UINT MAX-UINT MID-UINT WITHIN -> <TRUE> }T
T{ MAX-UINT MAX-UINT MID-UINT+1 WITHIN -> <TRUE> }T
T{ MAX-UINT MAX-UINT MAX-UINT WITHIN -> <FALSE> }T

T{ MIN-INT MIN-INT MIN-INT WITHIN -> <FALSE> }T
T{ MIN-INT MIN-INT 0 WITHIN -> <TRUE> }T
T{ MIN-INT MIN-INT 1 WITHIN -> <TRUE> }T
T{ MIN-INT MIN-INT MAX-INT WITHIN -> <TRUE> }T
T{ MIN-INT 0 MIN-INT WITHIN -> <FALSE> }T
T{ MIN-INT 0 0 WITHIN -> <FALSE> }T
T{ MIN-INT 0 1 WITHIN -> <FALSE> }T
T{ MIN-INT 0 MAX-INT WITHIN -> <FALSE> }T
T{ MIN-INT 1 MIN-INT WITHIN -> <FALSE> }T
T{ MIN-INT 1 0 WITHIN -> <TRUE> }T
T{ MIN-INT 1 1 WITHIN -> <FALSE> }T
T{ MIN-INT 1 MAX-INT WITHIN -> <FALSE> }T
T{ MIN-INT MAX-INT MIN-INT WITHIN -> <FALSE> }T
T{ MIN-INT MAX-INT 0 WITHIN -> <TRUE> }T
T{ MIN-INT MAX-INT 1 WITHIN -> <TRUE> }T
T{ MIN-INT MAX-INT MAX-INT WITHIN -> <FALSE> }T
T{ 0 MIN-INT MIN-INT WITHIN -> <FALSE> }T
T{ 0 MIN-INT 0 WITHIN -> <FALSE> }T
T{ 0 MIN-INT 1 WITHIN -> <TRUE> }T
T{ 0 MIN-INT MAX-INT WITHIN -> <TRUE> }T
T{ 0 0 MIN-INT WITHIN -> <TRUE> }T
T{ 0 0 0 WITHIN -> <FALSE> }T
T{ 0 0 1 WITHIN -> <TRUE> }T
T{ 0 0 MAX-INT WITHIN -> <TRUE> }T
T{ 0 1 MIN-INT WITHIN -> <FALSE> }T
T{ 0 1 0 WITHIN -> <FALSE> }T
T{ 0 1 1 WITHIN -> <FALSE> }T
T{ 0 1 MAX-INT WITHIN -> <FALSE> }T
T{ 0 MAX-INT MIN-INT WITHIN -> <FALSE> }T
T{ 0 MAX-INT 0 WITHIN -> <FALSE> }T
T{ 0 MAX-INT 1 WITHIN -> <TRUE> }T
T{ 0 MAX-INT MAX-INT WITHIN -> <FALSE> }T
T{ 1 MIN-INT MIN-INT WITHIN -> <FALSE> }T
T{ 1 MIN-INT 0 WITHIN -> <FALSE> }T
T{ 1 MIN-INT 1 WITHIN -> <FALSE> }T
T{ 1 MIN-INT MAX-INT WITHIN -> <TRUE> }T
T{ 1 0 MIN-INT WITHIN -> <TRUE> }T
T{ 1 0 0 WITHIN -> <FALSE> }T
T{ 1 0 1 WITHIN -> <FALSE> }T
T{ 1 0 MAX-INT WITHIN -> <TRUE> }T
T{ 1 1 MIN-INT WITHIN -> <TRUE> }T
T{ 1 1 0 WITHIN -> <TRUE> }T
T{ 1 1 1 WITHIN -> <FALSE> }T
T{ 1 1 MAX-INT WITHIN -> <TRUE> }T
T{ 1 MAX-INT MIN-INT WITHIN -> <FALSE> }T
T{ 1 MAX-INT 0 WITHIN -> <FALSE> }T
T{ 1 MAX-INT 1 WITHIN -> <FALSE> }T
T{ 1 MAX-INT MAX-INT WITHIN -> <FALSE> }T
T{ MAX-INT MIN-INT MIN-INT WITHIN -> <FALSE> }T
T{ MAX-INT MIN-INT 0 WITHIN -> <FALSE> }T
T{ MAX-INT MIN-INT 1 WITHIN -> <FALSE> }T
T{ MAX-INT MIN-INT MAX-INT WITHIN -> <FALSE> }T
T{ MAX-INT 0 MIN-INT WITHIN -> <TRUE> }T
T{ MAX-INT 0 0 WITHIN -> <FALSE> }T
T{ MAX-INT 0 1 WITHIN -> <FALSE> }T
T{ MAX-INT 0 MAX-INT WITHIN -> <FALSE> }T
T{ MAX-INT 1 MIN-INT WITHIN -> <TRUE> }T
T{ MAX-INT 1 0 WITHIN -> <TRUE> }T
T{ MAX-INT 1 1 WITHIN -> <FALSE> }T
T{ MAX-INT 1 MAX-INT WITHIN -> <FALSE> }T
T{ MAX-INT MAX-INT MIN-INT WITHIN -> <TRUE> }T
T{ MAX-INT MAX-INT 0 WITHIN -> <TRUE> }T
T{ MAX-INT MAX-INT 1 WITHIN -> <TRUE> }T
T{ MAX-INT MAX-INT MAX-INT WITHIN -> <FALSE> }T

\ ------------------------------------------------------------------------
TESTING UNUSED

T{ UNUSED DROP -> }T

\ ------------------------------------------------------------------------
TESTING AGAIN
T{ : ag0 701 BEGIN DUP 7 MOD 0= IF EXIT THEN 1+ AGAIN ; -> }T
T{ ag0 -> 707 }T

\ ------------------------------------------------------------------------
TESTING MARKER

T{ : ma? BL WORD FIND NIP 0<> ; -> }T
T{ MARKER ma0  -> }T
T{ : ma1 111 ; -> }T
T{ MARKER ma2  -> }T
T{ : ma1 222 ; -> }T
T{ ma? ma0 ma? ma1 ma? ma2 -> <TRUE> <TRUE> <TRUE> }T
T{ ma1 ma2 ma1 -> 222 111 }T
T{ ma? ma0 ma? ma1 ma? ma2 -> <TRUE> <TRUE> <FALSE> }T
T{ ma0 -> }T
T{ ma? ma0 ma? ma1 ma? ma2 -> <FALSE> <FALSE> <FALSE> }T

bye
